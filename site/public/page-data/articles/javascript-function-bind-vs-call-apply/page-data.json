{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/articles/javascript-function-bind-vs-call-apply/","result":{"data":{"markdownRemark":{"html":"<p>In case you don't know, or you are starting with javascript, there is a method in the Function prototype called <strong><em>bind</em></strong> that, once you start, you will never stop using it. This method was added in ES5 (so if you are developing for IE &#x3C; 9, I recommend to have a look at the <a href=\"http://underscorejs.org/#bind\" title=\"Underscore bind polyfill\" target=\"_blank\">underscore polyfill</a>) and let the developer define what the object <strong><em>this</em></strong> will be inside the function. Here it is an example:</p>\n<pre class=\"lang:js decode:true \" title=\"Function bind example\" >var f = function(){\r\n    console.log(this.toString());\r\n}\r\n\r\nvar bound = f.bind('bind');\r\n\r\nbound(); // bind</pre> \n<p>On the other hand, there are two old javascript friends, <strong><em>call</em></strong> &#x26; <strong><em>apply</em></strong> Function methods, which execute the function and also can customize the context of execution, allowing to define the <strong><em>this</em></strong> object when it is given as their first argument:</p>\n<pre class=\"lang:js decode:true \" >var f = function(){\r\n    console.log(this.toString());\r\n}\r\n\r\nf.apply('apply', []); // apply\r\nf.call('call'); // call</pre>\n<p>So far so good, but there is a situation where the behaviour of these functions is not that clear. What would happen if the call or apply methods are used on a already bound function? Let's find out...</p>\n<pre class=\"lang:js decode:true \" title=\"bind vs apply and call example\" >var f = function(){\r\n    console.log(this.toString());\r\n}\r\n\r\nvar a = 'apply',\r\n    b = 'bind',\r\n    c = 'call'\r\n;\r\n\r\nvar bound = f.bind(b);\r\n\r\nbound(); // bind\r\n\r\nf.apply(a, []); // apply\r\nf.call(c); // call\r\n\r\nbound.apply(a, []); // bind\r\nbound.call(c); // bind</pre> \n<p>Want to try it? here you have the <a title=\"Function bind is more powerful than call or apply\" href=\"http://jsfiddle.net/marquex/BcvE6/1/\" target=\"_blank\">bind vs call &#x26; apply jsfiddle</a>.</p>\n<p>Yes, <strong>bind has won</strong>! I would have bet for call &#x26; apply because they are executed after bind, but it seems like a bound function is always executed with the given <em>this </em>parameter. From now on, I will <strong>be careful when using call &#x26; apply, they don't always use the <em>this </em>object passed as argument</strong>.</p>","frontmatter":{"date":"March 29, 2014","slug":"/articles/javascript-function-bind-vs-call-apply","title":"Javascript function context: bind vs call & apply","type":"article"}}},"pageContext":{"id":"7f181402-ce73-5c9d-a576-9a98e1878d26","frontmatter__slug":"/articles/javascript-function-bind-vs-call-apply","__params":{"frontmatter__slug":"articles"}}},"staticQueryHashes":[]}